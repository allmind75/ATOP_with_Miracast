package com.atop.main;

import java.io.File;

import android.app.Activity;
import android.app.Presentation;
import android.content.Context;
import android.content.Intent;
import android.content.SharedPreferences;
import android.hardware.display.DisplayManager;
import android.os.Bundle;
import android.os.Environment;
import android.provider.Settings;
import android.util.SparseArray;
import android.view.Display;
import android.view.LayoutInflater;
import android.view.Menu;
import android.view.MenuInflater;
import android.view.MenuItem;
import android.view.View;
import android.view.ViewGroup.LayoutParams;
import android.view.Window;
import android.view.WindowManager;
import android.widget.ImageButton;
import android.widget.Toast;

import com.atop.callstate.CallStateReceiver;
import com.atop.wol.WolActivity;
import com.example.ssm_test.R;

public class MainActivity extends Activity {

	private static String dirPath; // 폴더가 생성될 장소
	private String enviornment;
	private SharedPreferences mainPref;
	private MyApplication myApp;
	private boolean isCall = true;
	private String settingState;
	private CallStateReceiver callStateReceiver;

	@Override
	public void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);

		setContentView(R.layout.activity_main);

		enviornment = Environment.getExternalStorageState();

		if (enviornment.equals(Environment.MEDIA_MOUNTED)) {

			dirPath = "/sdcard/ATOP";
			File file = new File(dirPath);
			if (!file.exists()) { // 원하는 경로에 폴더가 있는지 확인
				file.mkdirs();
			}
		} else
			Toast.makeText(MainActivity.this, "SD Card 인식 실패",
					Toast.LENGTH_SHORT).show();
		myApp = (MyApplication) getApplication();

		mainPref = getSharedPreferences("mainpref", 0);

		settingState = mainPref.getString("setting", null);

		if (settingState != null) {
			isCall = mainPref.getBoolean("call", true);
			myApp.setCall(isCall);
		} else {
			SharedPreferences.Editor editor = mainPref.edit();
			editor.putBoolean("call", isCall);
			editor.commit();
			myApp.setCall(isCall);
		}
		callStateReceiver = new CallStateReceiver();

		ImageButton btn_makeroom = (ImageButton) findViewById(R.id.imageButton_makeroom);
		btn_makeroom.setOnClickListener(new View.OnClickListener() {

			@Override
			public void onClick(View v) {
				Intent intent = new Intent(MainActivity.this,
						ConnectServerActivity.class);
				startActivity(intent);

			}
		});
		ImageButton btn_enterroom = (ImageButton) findViewById(R.id.imageButton_enterroom);
		btn_enterroom.setOnClickListener(new View.OnClickListener() {

			@Override
			public void onClick(View v) {
				Intent intent = new Intent(MainActivity.this,
						SurfaceViewActivity.class);
				startActivity(intent);

			}
		});

		ImageButton btn_transfile = (ImageButton) findViewById(R.id.imageButton_transandroid);
		btn_transfile.setOnClickListener(new View.OnClickListener() {

			@Override
			public void onClick(View v) {
				Intent intent = new Intent(MainActivity.this,
						SendFilesActivity.class);
				startActivity(intent);
				finish();
			}
		});

	}

	@Override
	public boolean onCreateOptionsMenu(Menu menu) {
		super.onCreateOptionsMenu(menu);
		MenuInflater inflater = getMenuInflater();
		inflater.inflate(R.menu.action_bar, menu);

		return true;
	}

	@Override
	public boolean onOptionsItemSelected(MenuItem item) {

		switch (item.getItemId()) {
		case R.id.action_item_option:
			Intent intent_1 = new Intent(MainActivity.this,
					SettingActivity.class);
			startActivity(intent_1);
			return true;
		case R.id.action_item_wifiSetting:
			startActivity(new Intent(Settings.ACTION_WIFI_SETTINGS));
			return true;
		case R.id.action_item_wol:
			Intent intent_2 = new Intent(MainActivity.this, WolActivity.class);
			startActivity(intent_2);
			return true;
		default:
			return super.onOptionsItemSelected(item);
		}
	}

	@Override
	public void onDestroy() {
		// TODO Auto-generated method stub
		super.onDestroy();
	}

	@Override
	public void onRestart() {
		// TODO Auto-generated method stub
		super.onRestart();
		settingState = mainPref.getString("setting", null);

		if (settingState != null) {
			isCall = mainPref.getBoolean("call", true);
			myApp.setCall(isCall);
		}
	}

	@Override
	public void onBackPressed() {
		super.onBackPressed();
	}

}
